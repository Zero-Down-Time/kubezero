{{- if .Values.global }}
global:
  {{- toYaml .Values.global | nindent 2 }}
{{- end }}
calico:
  enabled: {{ .Values.calico.enabled  }}
  values:
    network: {{ default "vxlan" .Values.calico.network }}
    mtu: {{ default "8941" .Values.calico.mtu }}
    prometheus: {{ .Values.metrics.enabled }}
cert-manager:
  enabled: {{ index .Values "cert-manager" "enabled" }}
  values:
    localCA:
      enabled: true
    {{- if eq .Values.platform "aws" }}
    cert-manager:
      podAnnotations:
        iam.amazonaws.com/role: "{{ index .Values "cert-manager" "IamArn" }}"
    {{- end }}

    {{- if .Values.kiam.enabled }}
    clusterIssuer:
      name: letsencrypt-dns-prod
      server: https://acme-v02.api.letsencrypt.org/directory
      email: {{ index .Values "cert-manager" "email" }}
      solvers:
        - selector:
            dnsZones:
            {{- with index .Values "cert-manager" "dnsZones" }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          dns01:
            {{- if eq .Values.platform "aws" }}
            route53:
              region: {{ .Values.region }}
            {{- else }}
            {{- with index .Values "cert-manager" "solvers" }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
            {{- end }}
    {{- end }}


{{- if eq .Values.platform "aws" }}
kiam:
  enabled: {{ .Values.kiam.enabled }}
  values:
    kiam:
      enabled: {{ not .Values.kiam.certsOnly }}
      server:
        assumeRoleArn: "{{ .Values.kiam.IamArn }}"
        deployment:
          replicas: {{ ternary 2 1 .Values.HighAvailableControlplane }}
        prometheus:
          servicemonitor:
            enabled: {{ .Values.metrics.enabled }}
      agent:
        prometheus:
          servicemonitor:
            enabled: {{ .Values.metrics.enabled }}

{{- if .Values.kiam.enabled }}
# AWS only components
aws-ebs-csi-driver:
  enabled: {{ index .Values "aws-ebs-csi-driver" "enabled" }}
  values:
    aws-ebs-csi-driver:
      replicaCount: {{ ternary 2 1 .Values.HighAvailableControlplane }}
      podAnnotations:
        iam.amazonaws.com/role: "{{ index .Values "aws-ebs-csi-driver" "IamArn" }}"
      extraVolumeTags:
        Name: {{ .Values.ClusterName }}
{{- end }}

aws-efs-csi-driver:
  enabled: {{ index .Values "aws-efs-csi-driver" "enabled" }}
  values:
    {{- with index .Values "aws-efs-csi-driver" "nodeSelector" }}
    aws-efs-csi-driver:
      nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with index .Values "aws-efs-csi-driver" "PersistentVolumes" }}
    PersistentVolumes:
    {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- if index .Values "aws-efs-csi-driver" "EfsId" }}
    PersistentVolume:
      create: true
      EfsId: {{ index .Values "aws-efs-csi-driver" "EfsId" }}
      Name: {{ default "kubezero-efs-pv" ( index .Values "aws-efs-csi-driver" "PVName" ) }}
    {{- end }}
{{- end }}

istio:
  enabled: {{ .Values.istio.enabled }}
  values:
    istio-discovery:
      pilot:
        replicaCount: {{ ternary 2 1 .Values.HighAvailableControlplane }}

istio-ingress:
  enabled: {{ index .Values "istio-ingress" "enabled" }}
  values:
    {{- if index .Values "istio-ingress" "public" "enabled" }}
    istio-ingress:
      enabled: true
      {{- with index .Values "istio-ingress" "public" "gateway" }}
      gateways:
        istio-ingressgateway:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with index .Values "istio-ingress" "public" "dnsNames" }}
      dnsNames:
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- end }}

    {{- if index .Values "istio-ingress" "private" "enabled" }}
    istio-private-ingress:
      enabled: true
      {{- with index .Values "istio-ingress" "private" "gateway" }}
      gateways:
        istio-ingressgateway:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with index .Values "istio-ingress" "private" "dnsNames" }}
      dnsNames:
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- end }}

metrics:
  enabled: {{ .Values.metrics.enabled }}
  values:
    {{- if .Values.metrics.istio.grafana.enabled }}
    grafana:
      istio:
        {{- with .Values.metrics.istio.grafana }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    {{- end }}
    {{- if .Values.metrics.istio.prometheus.enabled }}
    prometheus:
      istio:
        {{- with .Values.metrics.istio.prometheus }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    {{- end }}
    {{- if index .Values "metrics" "kube-prometheus-stack" }}
    kube-prometheus-stack:
      {{- with index .Values "metrics" "kube-prometheus-stack" }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- end }}

logging:
  enabled: {{ .Values.logging.enabled }}
  values:
    {{- with index .Values "logging" "eck-operator" }}
    eck-operator:
      {{- toYaml . | nindent 6 }}
    {{- end }}

    {{- if .Values.logging.elastic_password }}
    elastic_password: {{ .Values.logging.elastic_password }}
    {{- end }}

    {{- if .Values.logging.version }}
    version: {{ .Values.logging.version }}
    {{- end }}

    {{- if .Values.logging.fullnameOverride }}
    fullnameOverride: {{ .Values.logging.fullnameOverride }}
    {{- end }}

    {{- if .Values.logging.es }}
    es:
      {{- if .Values.logging.es.nodeSets }}
      nodeSets:
      {{- with .Values.logging.es.nodeSets }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
      prometheus: {{ .Values.metrics.enabled }}

      {{- if .Values.logging.es.s3Snapshot }}
      s3Snapshot:
        {{- with .Values.logging.es.s3Snapshot }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    {{- end }}

    {{- if .Values.logging.kibana }}
    kibana:
      {{- with .Values.logging.kibana }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- end }}

    fluentd:
      enabled: {{ .Values.logging.fluentd.enabled }}
      metrics:
        enabled: {{ .Values.metrics.enabled }}
      url: {{ .Values.logging.fluentd.url }}
      {{- if .Values.logging.fluentd.output }}
      output:
        host: {{ .Values.logging.fluentd.output.host }}
      {{- end }}
      {{- if .Values.logging.fluentd.extraEnvVars }}
      extraEnvVars:
        {{- toYaml .Values.logging.fluentd.extraEnvVars | nindent 8 }}
      {{- end }}
      {{- if and .Values.logging.fluentd.istio .Values.istio.enabled }}
      istio:
        {{- with .Values.logging.fluentd.istio }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}

    fluent-bit:
      enabled: {{ index .Values.logging "fluent-bit" "enabled" }}
      metrics:
        enabled: {{ .Values.metrics.enabled }}
      {{- if index .Values.logging "fluent-bit" "config" }}
      config:
        {{- with index .Values.logging "fluent-bit" "config" }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      
argo-cd:
  enabled: {{ index .Values "argo-cd" "enabled" }}
  values:
    argo-cd:
      controller:
        metrics:
          enabled: {{ .Values.metrics.enabled }}
      repoServer:
        metrics:
          enabled: {{ .Values.metrics.enabled }}
      server:
        metrics:
          enabled: {{ .Values.metrics.enabled }}
        {{- with index .Values "argo-cd" "server" }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with index .Values "argo-cd" "configs" }}
      configs:
        {{- toYaml . | nindent 8}}
      {{- end }}
    {{- if and ( index .Values "argo-cd" "istio" "enabled" ) .Values.istio.enabled }}
    istio:
      {{- with index .Values "argo-cd" "istio" }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- end }}
